#include "SenseKitContext.h"
#include "SenseKitContextImpl.h"
#include "CreateStreamProxy.h"
#include <SenseKit/Plugins/StreamServiceProxyBase.h>
#include <SenseKitAPI.h>

namespace sensekit {

    SenseKitContext::SenseKitContext()
          : m_impl(std::make_unique<SenseKitContextImpl>()),
            m_proxy(create_stream_proxy(this))
            {}

    SenseKitContext::~SenseKitContext() {}

    sensekit_status_t SenseKitContext::initialize()
    {
        sensekit_api_set_proxy(proxy());
        return m_impl->initialize();
    }

    sensekit_status_t SenseKitContext::terminate()
    {
        return m_impl->terminate();
    }

    StreamServiceProxyBase* SenseKitContext::proxy()
    {
        return m_proxy.get();
    }

^^^BEGINREPLACE:stream^^^
    ^RETURN^ SenseKitContext::^FUNC^(^PARAMS:ref^)
    {
        return m_impl->^FUNC^(^PARAMS:names^);
    }

^^^ENDREPLACE^^^

    sensekit_status_t SenseKitContext::notify_host_event(sensekit_event_id id, const void* data, size_t dataSize)
    {
        return notify_host_event(id, data, dataSize);
    }
}
