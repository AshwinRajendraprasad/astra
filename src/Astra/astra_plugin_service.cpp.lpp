#include "astra_plugin_service.hpp"
#include "astra_plugin_service_impl.hpp"
#include "astra_create_plugin_proxy.hpp"
#include "astra_cxx_compatibility.hpp"

namespace astra
{
    plugin_service::plugin_service(streamset_catalog& catalog)
        : m_impl(std::make_unique<plugin_service_impl>(catalog)),
          m_proxy(create_plugin_proxy(this))
    {}

    plugin_service::~plugin_service()
    {}

    void plugin_service::notify_host_event(astra_event_id id, const void* data, size_t dataSize)
    {
        m_impl->notify_host_event(id, data, dataSize);
    }

    PluginServiceProxyBase* plugin_service::proxy()
    {
        return m_proxy.get();
    }

^^^BEGINREPLACE:plugin^^^
   ^RETURN^ plugin_service::^FUNC^(^PARAMS:ref^)
   {
       return m_impl->^FUNC^(^PARAMS:names^);
   }

^^^ENDREPLACE^^^

}
