/* ^^^AUTOGENHEADER^^^ */
#ifndef STREAMCALLBACKTARGET_H
#define STREAMCALLBACKTARGET_H

#include <SenseKit/sensekit_types.h>
#include <SenseKit/Plugins/plugin_callbacks.h>

namespace sensekit {

    class StreamCallbackListener
    {
    public:
        virtual ~StreamCallbackListener() = default;
    private:

^^^BEGINREPLACE:plugincallbacks^^^
        static ^RETURN^ ^FUNC^_thunk(^PARAMS:void^)
        {
            static_cast<StreamCallbackListener*>(^PARAMS:voidonly,names^)->^FUNC^(^PARAMS:names,wrap,deref^);
        }

^^^ENDREPLACE^^^
^^^BEGINREPLACE:plugincallbacks^^^
        virtual ^RETURN^ ^FUNC^(^PARAMS:ref^) {}

^^^ENDREPLACE^^^
        
        friend stream_callbacks_t create_plugin_callbacks(StreamCallbackListener* context);
    };

    inline stream_callbacks_t create_plugin_callbacks(StreamCallbackListener* context)
    {
        stream_callbacks_t callbacks;

        callbacks.context = context;
^^^BEGINREPLACE:plugincallbacks^^^
        callbacks.^FUNC^_callback = &StreamCallbackListener::^FUNC^_thunk;
^^^ENDREPLACE^^^

        return callbacks;
    }
}

#endif /* STREAMCALLBACKTARGET_H */